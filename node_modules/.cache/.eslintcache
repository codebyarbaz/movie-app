[{"C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\index.js":"1","C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\App.js":"2","C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\components\\MovieComponent.js":"3","C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\components\\MovieInfoComponent.js":"4"},{"size":253,"mtime":1649994394066,"results":"5","hashOfConfig":"6"},{"size":4768,"mtime":1651462231260,"results":"7","hashOfConfig":"6"},{"size":1251,"mtime":1651061080753,"results":"8","hashOfConfig":"6"},{"size":2700,"mtime":1651065037943,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"sdemtb",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"13"},"C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\index.js",[],[],[],"C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\App.js",[],[],"C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\components\\MovieComponent.js",[],[],"C:\\Users\\hp\\Documents\\web development\\movie-app\\src\\components\\MovieInfoComponent.js",["24"],[],"import styled from 'styled-components';\r\nimport Axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\nconst API_KEY = \"ec479189\";\r\n\r\nconst Container =styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\npadding: 20px 30px;\r\njustify-content: center;\r\nborder-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\nobject-fit: cover;\r\nheight: 350px;\r\n`;\r\nconst MovieName = styled.span`\r\nfont-size: 22px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 15px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\n\r\nconst InfoColumn = styled.div`\r\n  display:flex;\r\n  flex-direction:row;\r\n  justify-content:space-between;\r\n  `;\r\n\r\nconst MovieInfo = styled.span`\r\nfont-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n  overflow: hidden;\r\n  margin: 4px 0;\r\n  text-transform: capitalize;\r\n  text-overflow: ellipsis;\r\n  & span {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst MovieInfoComponent = (props)=> {\r\n    const [movieInfo, setMovieInfo] = useState;\r\n    const { selectedMovie } = props;\r\n    useEffect(()=>{Axios.get(`https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`).then((response)=>setMovieInfo(response.data)); }, [selectedMovie]);\r\n    return (\r\n            <Container>\r\n          <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\r\n          <InfoColumn>\r\n            <MovieName>\r\n              {movieInfo?.Type}: <span>{movieInfo?.Title}</span>\r\n            </MovieName>\r\n            <MovieInfo>\r\n              IMDB Rating: <span>{movieInfo?.imdbRating}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Year: <span>{movieInfo?.Year}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Language: <span>{movieInfo?.Language}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Rated: <span>{movieInfo?.Rated}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Released: <span>{movieInfo?.Released}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Runtime: <span>{movieInfo?.Runtime}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Genre: <span>{movieInfo?.Genre}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Director: <span>{movieInfo?.Director}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Actors: <span>{movieInfo?.Actors}</span>\r\n            </MovieInfo>\r\n            <MovieInfo>\r\n              Plot: <span>{movieInfo?.Plot}</span>\r\n            </MovieInfo>\r\n          </InfoColumn>\r\n            </Container>\r\n    );\r\n  };\r\n  \r\nexport default MovieInfoComponent;",{"ruleId":"25","severity":1,"message":"26","line":55,"column":145,"nodeType":"27","endLine":55,"endColumn":160,"suggestions":"28"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMovieInfo'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [selectedMovie, setMovieInfo]",{"range":"32","text":"33"},[1244,1259],"[selectedMovie, setMovieInfo]"]