{"ast":null,"code":"import { AnimatableColor, deepExtend, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n  constructor() {\n    this.autoPlay = true;\n    this.fill = true;\n    this.life = new EmitterLife();\n    this.rate = new EmitterRate();\n    this.shape = \"square\";\n    this.startCount = 0;\n  }\n\n  load(data) {\n    if (data === undefined) {\n      return;\n    }\n\n    if (data.autoPlay !== undefined) {\n      this.autoPlay = data.autoPlay;\n    }\n\n    if (data.size !== undefined) {\n      if (this.size === undefined) {\n        this.size = new EmitterSize();\n      }\n\n      this.size.load(data.size);\n    }\n\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n\n    this.domId = data.domId;\n\n    if (data.fill !== undefined) {\n      this.fill = data.fill;\n    }\n\n    this.life.load(data.life);\n    this.name = data.name;\n\n    if (data.particles !== undefined) {\n      if (data.particles instanceof Array) {\n        this.particles = data.particles.map(s => {\n          return deepExtend({}, s);\n        });\n      } else {\n        this.particles = deepExtend({}, data.particles);\n      }\n    }\n\n    this.rate.load(data.rate);\n\n    if (data.shape !== undefined) {\n      this.shape = data.shape;\n    }\n\n    if (data.position !== undefined) {\n      this.position = {};\n\n      if (data.position.x !== undefined) {\n        this.position.x = setRangeValue(data.position.x);\n      }\n\n      if (data.position.y !== undefined) {\n        this.position.y = setRangeValue(data.position.y);\n      }\n    }\n\n    if (data.spawnColor !== undefined) {\n      if (this.spawnColor === undefined) {\n        this.spawnColor = new AnimatableColor();\n      }\n\n      this.spawnColor.load(data.spawnColor);\n    }\n\n    if (data.startCount !== undefined) {\n      this.startCount = data.startCount;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hp/Downloads/movies/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js"],"names":["AnimatableColor","deepExtend","setRangeValue","EmitterLife","EmitterRate","EmitterSize","Emitter","constructor","autoPlay","fill","life","rate","shape","startCount","load","data","undefined","size","direction","domId","name","particles","Array","map","s","position","x","y","spawnColor"],"mappings":"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","sourcesContent":["import { AnimatableColor, deepExtend, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        if (data.particles !== undefined) {\n            if (data.particles instanceof Array) {\n                this.particles = data.particles.map((s) => {\n                    return deepExtend({}, s);\n                });\n            }\n            else {\n                this.particles = deepExtend({}, data.particles);\n            }\n        }\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}