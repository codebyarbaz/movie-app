{"ast":null,"code":"import { colorMix, getStyleFromHsl, getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n  context.save();\n  context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n  context.restore();\n}\nexport function clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function gradient(context, p1, p2, opacity) {\n  var gradStop = Math.floor(p2.getRadius() / p1.getRadius()),\n      color1 = p1.getFillColor(),\n      color2 = p2.getFillColor();\n\n  if (!color1 || !color2) {\n    return;\n  }\n\n  var sourcePos = p1.getPosition(),\n      destPos = p2.getPosition(),\n      midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()),\n      grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n  grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n  grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n  return grad;\n}\nexport function drawParticle(container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var pos = particle.getPosition();\n  context.save();\n\n  if (((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) || ((_b = particle.roll) === null || _b === void 0 ? void 0 : _b.enable)) {\n    var roll = ((_c = particle.roll) === null || _c === void 0 ? void 0 : _c.enable) && particle.roll,\n        tilt = ((_d = particle.tilt) === null || _d === void 0 ? void 0 : _d.enable) && particle.tilt,\n        rollHorizontal = roll && roll.horizontal,\n        rollVertical = roll && roll.vertical;\n    context.setTransform(rollHorizontal ? Math.cos(particle.roll.angle) : 1, tilt ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tilt ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollVertical ? Math.sin(particle.roll.angle) : 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  context.beginPath();\n  var angle = ((_f = (_e = particle.rotate) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  var shadowColor = particle.shadowColor;\n\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n\n  var stroke = particle.stroke;\n  context.lineWidth = (_g = particle.strokeWidth) !== null && _g !== void 0 ? _g : 0;\n\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n\n  drawShape(container, context, particle, radius, opacity, delta);\n\n  if (((_h = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _h !== void 0 ? _h : 0) > 0) {\n    context.stroke();\n  }\n\n  if (particle.close) {\n    context.closePath();\n  }\n\n  if (particle.fill) {\n    context.fill();\n  }\n\n  context.restore();\n  context.save();\n\n  if (((_j = particle.tilt) === null || _j === void 0 ? void 0 : _j.enable) && particle.tilt) {\n    context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  context.restore();\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  var drawer = container.drawers.get(particle.shape);\n\n  if (!drawer) {\n    return;\n  }\n\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  var drawer = container.drawers.get(particle.shape);\n\n  if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n    return;\n  }\n\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n\n  context.save();\n  plugin.draw(context, delta);\n  context.restore();\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n\n  context.save();\n  plugin.drawParticle(context, particle, delta);\n  context.restore();\n}\nexport function drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n  if (width <= 0) {\n    return;\n  }\n\n  var pos = particle.getPosition();\n\n  if (fillColorValue) {\n    context.strokeStyle = getStyleFromHsl(fillColorValue, opacity);\n  }\n\n  context.lineWidth = width;\n  var rotationRadian = rotation * Math.PI / 180;\n  context.beginPath();\n  context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n  context.stroke();\n}\nexport function alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === \"darken\" ? -1 : 1) * value\n  };\n}","map":{"version":3,"sources":["C:/Users/hp/Downloads/movies/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js"],"names":["colorMix","getStyleFromHsl","getStyleFromRgb","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clear","clearRect","gradient","opacity","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","grad","createLinearGradient","addColorStop","drawParticle","container","particle","delta","colorStyles","backgroundMask","composite","radius","shadow","_a","_b","_c","_d","_e","_f","_g","_h","_j","pos","tilt","enable","roll","rollHorizontal","horizontal","rollVertical","vertical","setTransform","cos","angle","value","cosDirection","sin","sinDirection","translate","rotate","options","path","velocity","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","offset","shadowOffsetY","fill","stroke","lineWidth","strokeWidth","strokeStyle","drawShape","close","drawShapeAfterEffect","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","drawPlugin","plugin","drawParticlePlugin","drawEllipse","fillColorValue","rotation","start","rotationRadian","PI","ellipse","alterHsl","color","type","h","s","l"],"mappings":"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","sourcesContent":["import { colorMix, getStyleFromHsl, getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawParticle(container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const pos = particle.getPosition();\n    context.save();\n    if (((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) || ((_b = particle.roll) === null || _b === void 0 ? void 0 : _b.enable)) {\n        const roll = ((_c = particle.roll) === null || _c === void 0 ? void 0 : _c.enable) && particle.roll, tilt = ((_d = particle.tilt) === null || _d === void 0 ? void 0 : _d.enable) && particle.tilt, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        context.setTransform(rollHorizontal ? Math.cos(particle.roll.angle) : 1, tilt ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tilt ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollVertical ? Math.sin(particle.roll.angle) : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    context.beginPath();\n    const angle = ((_f = (_e = particle.rotate) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_g = particle.strokeWidth) !== null && _g !== void 0 ? _g : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_h = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _h !== void 0 ? _h : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    context.restore();\n    context.save();\n    if (((_j = particle.tilt) === null || _j === void 0 ? void 0 : _j.enable) && particle.tilt) {\n        context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    context.save();\n    plugin.draw(context, delta);\n    context.restore();\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    context.save();\n    plugin.drawParticle(context, particle, delta);\n    context.restore();\n}\nexport function drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n    if (width <= 0) {\n        return;\n    }\n    const pos = particle.getPosition();\n    if (fillColorValue) {\n        context.strokeStyle = getStyleFromHsl(fillColorValue, opacity);\n    }\n    context.lineWidth = width;\n    const rotationRadian = (rotation * Math.PI) / 180;\n    context.beginPath();\n    context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n    context.stroke();\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}