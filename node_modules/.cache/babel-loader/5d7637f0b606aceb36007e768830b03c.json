{"ast":null,"code":"import { AnimatableGradientColor } from \"./AnimatableGradientColor\";\nimport { GradientAngle } from \"./GradientAngle\";\nexport class AnimatableGradient {\n  constructor() {\n    this.angle = new GradientAngle();\n    this.colors = [];\n    this.type = \"random\";\n  }\n\n  load(data) {\n    if (!data) {\n      return;\n    }\n\n    this.angle.load(data.angle);\n\n    if (data.colors !== undefined) {\n      this.colors = data.colors.map(s => {\n        const tmp = new AnimatableGradientColor();\n        tmp.load(s);\n        return tmp;\n      });\n    }\n\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hp/Downloads/movies/node_modules/tsparticles-engine/esm/Options/Classes/Gradients/AnimatableGradient.js"],"names":["AnimatableGradientColor","GradientAngle","AnimatableGradient","constructor","angle","colors","type","load","data","undefined","map","s","tmp"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,2BAAxC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5BC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,IAAIH,aAAJ,EAAb;AACA,SAAKI,MAAL,GAAc,EAAd;AACA,SAAKC,IAAL,GAAY,QAAZ;AACH;;AACDC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACP,QAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,SAAKJ,KAAL,CAAWG,IAAX,CAAgBC,IAAI,CAACJ,KAArB;;AACA,QAAII,IAAI,CAACH,MAAL,KAAgBI,SAApB,EAA+B;AAC3B,WAAKJ,MAAL,GAAcG,IAAI,CAACH,MAAL,CAAYK,GAAZ,CAAiBC,CAAD,IAAO;AACjC,cAAMC,GAAG,GAAG,IAAIZ,uBAAJ,EAAZ;AACAY,QAAAA,GAAG,CAACL,IAAJ,CAASI,CAAT;AACA,eAAOC,GAAP;AACH,OAJa,CAAd;AAKH;;AACD,QAAIJ,IAAI,CAACF,IAAL,KAAcG,SAAlB,EAA6B;AACzB,WAAKH,IAAL,GAAYE,IAAI,CAACF,IAAjB;AACH;AACJ;;AArB2B","sourcesContent":["import { AnimatableGradientColor } from \"./AnimatableGradientColor\";\nimport { GradientAngle } from \"./GradientAngle\";\nexport class AnimatableGradient {\n    constructor() {\n        this.angle = new GradientAngle();\n        this.colors = [];\n        this.type = \"random\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(data.angle);\n        if (data.colors !== undefined) {\n            this.colors = data.colors.map((s) => {\n                const tmp = new AnimatableGradientColor();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}