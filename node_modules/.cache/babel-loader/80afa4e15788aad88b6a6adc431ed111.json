{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hp/Downloads/movies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/hp/Downloads/movies/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/hp/Downloads/movies/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/hp/Downloads/movies/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/hp/Downloads/movies/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/hp/Downloads/movies/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\hp\\\\Downloads\\\\movies\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { Circle, ExternalInteractorBase, Rectangle, Vector, calcEasing, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nexport var Repulser = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Repulser, _ExternalInteractorBa);\n\n  var _super = _createSuper(Repulser);\n\n  function Repulser(container) {\n    var _this;\n\n    _classCallCheck(this, Repulser);\n\n    _this = _super.call(this, container);\n\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n\n    _this.handleClickMode = function (mode) {\n      var options = _this.container.actualOptions;\n\n      if (mode !== \"repulse\") {\n        return;\n      }\n\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n\n      container.repulse.clicking = true;\n      container.repulse.count = 0;\n\n      var _iterator = _createForOfIteratorHelper(container.repulse.particles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          if (!_this.isEnabled(particle)) {\n            continue;\n          }\n\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      container.repulse.particles = [];\n      container.repulse.finish = false;\n      setTimeout(function () {\n        if (!container.destroyed) {\n          if (!container.repulse) {\n            container.repulse = {\n              particles: []\n            };\n          }\n\n          container.repulse.clicking = false;\n        }\n      }, options.interactivity.modes.repulse.duration * 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Repulser, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events,\n          divs = events.onDiv,\n          divRepulse = isDivModeEnabled(\"repulse\", divs);\n\n      if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode, divs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n                  this.hoverRepulse();\n                } else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n                  this.clickRepulse();\n                } else {\n                  divModeExecute(\"repulse\", divs, function (selector, div) {\n                    return _this2.singleSelectorRepulse(selector, div);\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"singleSelectorRepulse\",\n    value: function singleSelectorRepulse(selector, div) {\n      var _this3 = this;\n\n      var container = this.container,\n          query = document.querySelectorAll(selector);\n\n      if (!query.length) {\n        return;\n      }\n\n      query.forEach(function (item) {\n        var elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            divs = container.actualOptions.interactivity.modes.repulse.divs,\n            divRepulse = divMode(divs, elem);\n\n        _this3.processRepulse(pos, repulseRadius, area, divRepulse);\n      });\n    }\n  }, {\n    key: \"hoverRepulse\",\n    value: function hoverRepulse() {\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var repulseRadius = container.retina.repulseModeDistance;\n      this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n  }, {\n    key: \"processRepulse\",\n    value: function processRepulse(position, repulseRadius, area, divRepulse) {\n      var _this4 = this;\n\n      var _a;\n\n      var container = this.container,\n          query = container.particles.quadTree.query(area, function (p) {\n        return _this4.isEnabled(p);\n      }),\n          repulseOptions = container.actualOptions.interactivity.modes.repulse;\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          var _getDistances = getDistances(particle.position, position),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy,\n              distance = _getDistances.distance,\n              velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n              repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed),\n              normVec = Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n\n          particle.position.addTo(normVec);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"clickRepulse\",\n    value: function clickRepulse() {\n      var _this5 = this;\n\n      var container = this.container;\n\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n\n      if (!container.repulse.finish) {\n        if (!container.repulse.count) {\n          container.repulse.count = 0;\n        }\n\n        container.repulse.count++;\n\n        if (container.repulse.count === container.particles.count) {\n          container.repulse.finish = true;\n        }\n      }\n\n      if (container.repulse.clicking) {\n        var repulseDistance = container.retina.repulseModeDistance,\n            repulseRadius = Math.pow(repulseDistance / 6, 3),\n            mouseClickPos = container.interactivity.mouse.clickPosition;\n\n        if (mouseClickPos === undefined) {\n          return;\n        }\n\n        var range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n            query = container.particles.quadTree.query(range, function (p) {\n          return _this5.isEnabled(p);\n        });\n\n        var _iterator3 = _createForOfIteratorHelper(query),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var particle = _step3.value;\n\n            var _getDistances2 = getDistances(mouseClickPos, particle.position),\n                dx = _getDistances2.dx,\n                dy = _getDistances2.dy,\n                distance = _getDistances2.distance,\n                d = Math.pow(distance, 2),\n                velocity = container.actualOptions.interactivity.modes.repulse.speed,\n                force = -repulseRadius * velocity / d;\n\n            if (d <= repulseRadius) {\n              container.repulse.particles.push(particle);\n              var vect = Vector.create(dx, dy);\n              vect.length = force;\n              particle.velocity.setTo(vect);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else if (container.repulse.clicking === false) {\n        var _iterator4 = _createForOfIteratorHelper(container.repulse.particles),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _particle = _step4.value;\n\n            _particle.velocity.setTo(_particle.initialVelocity);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        container.repulse.particles = [];\n      }\n    }\n  }]);\n\n  return Repulser;\n}(ExternalInteractorBase);","map":{"version":3,"sources":["C:/Users/hp/Downloads/movies/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js"],"names":["Circle","ExternalInteractorBase","Rectangle","Vector","calcEasing","clamp","divMode","divModeExecute","getDistances","isDivModeEnabled","isInArray","mouseMoveEvent","Repulser","container","repulse","particles","handleClickMode","mode","options","actualOptions","clicking","count","particle","isEnabled","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","interactivity","modes","duration","_a","mouse","events","divs","onDiv","divRepulse","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","mouseMoveStatus","status","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","processRepulse","mousePos","repulseModeDistance","quadTree","p","repulseOptions","dx","dy","distance","speed","factor","repulseFactor","easing","maxSpeed","normVec","create","addTo","repulseDistance","Math","pow","mouseClickPos","undefined","range","d","force","push","vect"],"mappings":"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","sourcesContent":["import { Circle, ExternalInteractorBase, Rectangle, Vector, calcEasing, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions;\n            if (mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, options.interactivity.modes.repulse.duration * 1000);\n        };\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    clear() {\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = container.actualOptions.interactivity.modes.repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(calcEasing(1 - distance / repulseRadius, repulseOptions.easing) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance, repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = container.actualOptions.interactivity.modes.repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}